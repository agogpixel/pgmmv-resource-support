/**
 * Exports helper method for setting a module.
 *
 * @module module/set-module.function
 */
import { bootRootModule } from './boot-root-module.function';
import { isRootModuleBooted } from './is-root-module-booted.function';
import { rootModuleName } from './root-module-name.const';

////////////////////////////////////////////////////////////////////////////////
// Public Static Properties
////////////////////////////////////////////////////////////////////////////////

// None.

////////////////////////////////////////////////////////////////////////////////
// Private Static Properties
////////////////////////////////////////////////////////////////////////////////

// None.

////////////////////////////////////////////////////////////////////////////////
// Public Static Methods
////////////////////////////////////////////////////////////////////////////////

/**
 * Set module referenced by specified key.
 *
 * @typeParam T Type of module being set.
 * @param key Module key.
 * @param module Module reference.
 * @returns True when set successfully, false otherwise.
 */
export function setModule<T extends object>(key: string, module: T) {
  if (!isRootModuleBooted()) {
    if (!bootRootModule()) {
      return false;
    }
  }

  (window[rootModuleName] as Record<string, T>)[key] = module;

  return true;
}

////////////////////////////////////////////////////////////////////////////////
// Private Static Methods
////////////////////////////////////////////////////////////////////////////////

// None.
